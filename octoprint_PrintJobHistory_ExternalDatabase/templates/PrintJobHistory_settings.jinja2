
<form id="settings_printJobHistory" class="form-horizontal" >
    <h3>Print Job History-External Database  <small>{{ _('Version') }}: <span data-bind="text: pluginSettings.installed_version"></span></small></h3>

    <div class="tabbable"> <!-- Only required for left/right tabs -->
        <ul class="nav nav-tabs">
            <li class="active"><a href="#tab-pjh-General" data-toggle="tab">General</a></li>
            <li><a href="#tab-pjh-Database" data-toggle="tab">External Database</a></li>
            <li><a href="#tab-pjh-Camera" data-toggle="tab">Camera</a></li>
            <li><a href="#tab-pjh-Temperature" data-toggle="tab">Temperature</a></li>
{#            <li><a href="#tab-pjh-Maintenance" data-toggle="tab">Maintenance</a></li>#}
            <li><a href="#tab-pjh-Report" data-toggle="tab">Report</a></li>
            <li><a href="#tab-pjh-Export-Import" data-toggle="tab">Export / Import</a></li>
            <li><a href="#tab-pjh-Storage" data-toggle="tab">Storage</a></li>
            <li><a href="#tab-pjh-Debugging" data-toggle="tab">Debugging</a></li>
        </ul>
        <div class="tab-content">
            <!-- GENERAL - TAB -->
            <div class="tab-pane active" id="tab-pjh-General">
                <div class="control-group">
                    <div class="controls">
                        <label class="">
                            Capture print history:
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="none" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> none
                                </label>
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="always" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> always
                                </label>
                                <label class="checkbox">
                                        <input style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="successful" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> only on successful prints
                                </label>
                        </label>
                    </div>
                </div>
                <hr/>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrint" > Show print job edit dialog after print
                                <label class="radio">
                                    <input type="radio" name="showPrintJobDialogAfterPrintMode" value="always" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrintMode, enable: pluginSettings.showPrintJobDialogAfterPrint" > always
                                </label>
                                <label class="radio">
                                        <input type="radio" name="showPrintJobDialogAfterPrintMode" value="successful" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrintMode, enable: pluginSettings.showPrintJobDialogAfterPrint"> only on successful prints
                                </label>
                                <label class="radio">
                                        <input type="radio" name="showPrintJobDialogAfterPrintMode" value="failed" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrintMode, enable: pluginSettings.showPrintJobDialogAfterPrint"> only on canceled/failed prints
                                </label>

                        </label>
                    </div>
                </div>
                <hr/>
                <div class="control-group">
                    <div class="controls">
                        <label class="" >
                            Filament tracking is done by: <span data-bind="text: pluginSettings.selectedFilamentTrackerPlugin"></span>
                        </label>
                    </div>
                </div>
                <div class="control-group" >
                    <div class="controls">
                        <label class="">
                            Select preferred filament tracker:
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="selectedFilamentTrackerPlugin" value="none" data-bind="checked: pluginSettings.selectedFilamentTrackerPlugin"> None
                                </label>
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="selectedFilamentTrackerPlugin" value="SpoolManager Plugin" data-bind="checked: pluginSettings.selectedFilamentTrackerPlugin, enable:isSpoolManagerInstalled()"> SpoolManager-Plugin (Version 1.4.2+)
                                </label>
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="selectedFilamentTrackerPlugin" value="FilamentManager Plugin" data-bind="checked: pluginSettings.selectedFilamentTrackerPlugin, enable:isFilamentManagerInstalled()"> FilamentManager-Plugin (Version 1.7.2+)
                                </label>
                                <label class="checkbox">
                                    <input type="checkbox" data-bind="checked: pluginSettings.noNotificationTrackingPluginSelection" > Don't notify me again
                                </label>
                        </label>
                    </div>
                </div>
                <hr/>
                <div>Fallback if CostEstimation-Plugin is not available. (Status: <span data-bind="html:isCostEstimationPluginAvailableText"></span>)</div>
                <div class="control-group">
                    <label class="control-label">Currency symbol</label>
                    <div class="controls">
                        <input type="text" class="input-mini text-center" data-bind="value: pluginSettings.currencySymbol">
                    </div>
                </div>
                <div class="control-group" title="Format string that allows control of symbol position (%v = value, %s = symbol)">
                    <label class="control-label">String format</label>
                    <div class="controls">
                        <input type="text" class="input-mini text-center" data-bind="value: pluginSettings.currencyFormat">
                    </div>
                </div>
                <hr/>
                <div class="control-group">
                    <label class="">Slicer Settings expressions&nbsp;
                        <textarea rows="3" cols="60" data-bind="value: pluginSettings.slicerSettingsKeyValueExpression"></textarea>
                    </label>
                    <div class="help-inline">
                        Here you can define expression which are useed for parsing the slicersettings from gcode.<br>
                        Your expression needs two groups (brackets). First group is the key and the second group is the value.
                    </div>
                </div>

                <hr/>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.pluginCheckActivated" > Activate Plugin dependency check
                        </label>
                    </div>
                </div>
            </div>
            <!-- CAMERA - TAB -->
            <div class="tab-pane" id="tab-pjh-Camera">
                <div class="control-group" data-bind="visible: cameraSnapShotURLAvailable">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" name="takeSnapshotGroup" data-bind="checked: pluginSettings.takeSnapshotAfterPrint" > Take camera snapshot after print
                        </label>
                        <label class="checkbox">
                            <input type="checkbox" name="takeSnapshotGroup" data-bind="checked: pluginSettings.takeSnapshotOnM118Commnd" > Take camera snapshot if M118 command was sent from the printer. See example* below
                        </label>

                        <label class="checkbox">
                            <input type="checkbox" name="takeSnapshotGroup" data-bind="checked: pluginSettings.takeSnapshotOnGCodeCommnd" > <b>[DEPRECATED] will be removed in one of the next release</b><br/>Take camera snapshot if following gcode was sent
                            <input type="text" data-bind="value: pluginSettings.takeSnapshotGCodeCommndPattern" >
                        </label>
                        <div class="help-inline">
                            You don't need to enter the command exactly, the plugin  checks if the gcode starts with the entered text.
                            <div>E.g. Text: <code>M117 Snap</code>. Sent gcode was: <code>M117 Snapshot</code>. Result: snapshot is taken</div>
                        </div>
                    </div>
                </div>
                <div class="control-group" data-bind="visible: cameraSnapShotURLAvailable()==false">
                    <div class="controls">
                        <div class="help-inline">
                            <code>No Snapshot URL defined in "Webcam & Timelapse" section</code>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takePluginThumbnailAfterPrint" > Use thumbnail (if provided) after print, instead of camera snapshot
                        </label>
                        <div class="help-inline">
                            Currently tested thumbnail plugins:
                            <ul>
                                <li>Cura Thumbnails (if uploaded in ufp format)</li>
                                <li>PrusaSlicer Thumbnails </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label>
                            If both Camera- and Thumbnail-Image is available, which one should be prefered?
                            <select data-bind="value: pluginSettings.preferedImageSource" class="input-medium">
                                <option value="thumbnail">Thumbnail</option>
                                <option value="camera">Camera</option>
                            </select>
                        </label>
                    </div>
                </div>

                <div class="control-group">
                    <div class="controls">
                        <label>
                            <b>*Example taking Snapshot via M118 gcode</b>
<textarea disabled rows="8" cols="60" style="font-family: Courier;min-width: 96%" >
M400 ;Finish moves
G4 P1000 ;Wait for no vibrations
M300 S440 P100 ;Playing a beep

M118 //action:pjhTakeSnapshot

G4 P60000 ;Waiting for Camera taken the Snapshot
M300 S440 P100 ;Playing a beep
</textarea>

                        </label>
                    </div>
                </div>



            </div>
            <!-- TEMPERATURE - TAB -->
            <div class="tab-pane" id="tab-pjh-Temperature">
                <div class="control-group">
                    <div class="">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takeTemperatureFromPreHeatPlugin" > Take temperature values from PreHeat-Plugin (Status: <span data-bind="html:isPreHeatPluginAvailableText"></span>))
                        </label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="">Fallback: Read temperature from printer after print start with a delay of
                        <span class="input">
                            <span class="input-append">
                                <input type="number" step="1" min="0" class="input-mini text-right" data-bind="value: pluginSettings.delayReadingTemperatureFromPrinter">
                                <span class="add-on">seconds</span>
                            </span>
                        </span>
                    </label>
                </div>

                <div class="control-group">
                    <label class="">Default extruder tool&nbsp;
                        <span class="input">
                            <input type="text" class="input-mini text-right" data-bind="value: pluginSettings.defaultTemperatureToolId">
                        </span>
                    </label>
                </div>
            </div>
            <!-- REPORT - TAB -->
            <div class="tab-pane" id="tab-pjh-Report">
                {# Single - Report #}
                <div class="control-group no-bottom-gap">
                    <h4>Single Spool-Report</h4>
                    <label class="control-label">Print Job - Report Template</label>
                    <div class="controls">
                        <div class="input-append">
                            <input type="text" disabled="" class="input-xlarge text-right" data-bind="value: pluginSettings.singlePrintJobTemplateName">
                            <a href="#" class="btn btn-warning" title="Reset to default report template" data-bind="click: function(){ resetPrintJobReportTemplate('single'); }"><i class="icon-reply"></i></a>
                            <a class="btn btn-primary" title="Download Report-Template" data-bind="attr: {href: downloadPrintJobReportTemplateUrl('single')}" target="_blank" ><i class="icon-download"></i></a>
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">Upload Print Job - Report</label>
                    <div class="controls">
                        <div class="input-prepend">
                            <span class="btn fileinput-button">
                                <span>Browse...</span>
                                <input id="settings-pjh-uploadSingleReportTemplate-upload" type="file" name="file" data-url="/plugin/PrintJobHistory/uploadPrintJobReport/single" accept=".jinja2">
                            </span>
                            <span class="add-on" data-bind="text: singlePrintJobReportTemplateUploadName"></span>
                        </div>
                        <button class="btn btn-primary" data-bind="disable: (singlePrintJobReportTemplateInProgress() || singlePrintJobReportTemplateUploadName() == undefined), click: performSinglePrintJobReportTemplateUploadNameFromUpload" disabled="">
                            <i class="fa fa-spinner fa-spin" data-bind="visible: singlePrintJobReportTemplateInProgress" style="display: none;"></i> Upload Template
                        </button>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label"></label>
                    <div class="controls">
                        <div class="input">
                            <button title="Create a sample print report" class="btn  btn-inverse pull-center" data-bind="click: function(){ reportSamplePrintJobItem('single'); }">Create Sample-Report</button>
                        </div>
                    </div>
                </div>
                <hr/>
                {# Multi - Report #}
                <div class="control-group no-bottom-gap">
                    <h4>Multi Spool-Report</h4>
                    <label class="control-label">Print Job - Report Template</label>
                    <div class="controls">
                        <div class="input-append">
                            <input type="text" disabled="" class="input-xlarge text-right" data-bind="value: pluginSettings.multiPrintJobTemplateName">
                            <a href="#" class="btn btn-warning" title="Reset to default report template" data-bind="click: function(){ resetPrintJobReportTemplate('multi'); }"><i class="icon-reply"></i></a>
                            <a class="btn btn-primary" title="Download Report-Template" data-bind="attr: {href: downloadPrintJobReportTemplateUrl('multi')}" target="_blank" ><i class="icon-download"></i></a>
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">Upload Print Job - Report</label>
                    <div class="controls">
                        <div class="input-prepend">
                            <span class="btn fileinput-button">
                                <span>Browse...</span>
                                <input id="settings-pjh-uploadMultiReportTemplate-upload" type="file" name="file" data-url="/plugin/PrintJobHistory/uploadPrintJobReport/multi" accept=".jinja2">
                            </span>
                            <span class="add-on" data-bind="text: multiPrintJobReportTemplateUploadName"></span>
                        </div>
                        <button class="btn btn-primary" data-bind="disable: (multiPrintJobReportTemplateInProgress() || multiPrintJobReportTemplateUploadName() == undefined), click: performMultiPrintJobReportTemplateUploadNameFromUpload" disabled="">
                            <i class="fa fa-spinner fa-spin" data-bind="visible: multiPrintJobReportTemplateInProgress" style="display: none;"></i> Upload Template
                        </button>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label"></label>
                    <div class="controls">
                        <div class="input">
                            <button title="Create a sample print report" class="btn  btn-inverse pull-center" data-bind="click: function(){ reportSamplePrintJobItem('multi'); }">Create Sample-Report</button>
                        </div>
                    </div>
                </div>




            </div>


{#            <!-- Maintenance - TAB -->#}
{#            <div class="tab-pane" id="tab-pjh-Maintenance">#}
{##}
{#                <div class="control-group">#}
{#                    <label class="control-label">Begin</label>#}
{#                    <div class="controls">#}
{#                        <input type="text"  class="input-medium text-right" value="12.08.2020">#}
{#                        <div class="input-append">#}
{#                            <input type="number" step="any" min="0" class="input-mini text-right" data-bind="value: settingsViewModel.settings.plugins.DeleteAfterPrint.daysLimit" >#}
{#                            <span class="add-on">days</span>#}
{#                        </div>#}
{#                        next <input type="text"  class="input-medium text-right" value="11.10.2020">#}
{#                    </div>#}
{#                </div>#}
{#                <div class="control-group">#}
{#                    <label class="control-label">Last maintenance</label>#}
{#                    <div class="controls">#}
{#                        <div class="input">#}
{#                            <input type="text"  class="input-medium text-right" value="14.09.2020">#}
{#                            <input type="checkbox" data-bind="checked: pluginSettings.takeSnapshotAfterPrint,#}
{#                                                              disable: takeSnapshotAfterPrintDisabled"> Confirm last maintenance#}
{##}
{#                        </div>#}
{#                    </div>#}
{#                </div>#}
{##}
{#                <div class="control-group">#}
{#                    <label class="control-label">Notes</label>#}
{#                    <div class="controls">#}
{#                        <div class="input">#}
{#                            <textarea rows="5" cols="60" style="min-width: 96%" data-bind="enable: settingsViewModel.settings.plugins.DisplayLayerProgress.showOnNavBar, value: settingsViewModel.settings.plugins.DisplayLayerProgress.navBarMessagePattern">Maintenance-History</textarea>#}
{#                        </div>#}
{#                    </div>#}
{#                </div>#}
{##}
{#<!--                <div class="control-group">-->#}
{#<!--                    <label class="checkbox">-->#}
{#<!--                        <input type="checkbox" data-bind="checked: pluginSettings.takeSnapshotAfterPrint,-->#}
{#<!--                                                              disable: takeSnapshotAfterPrintDisabled"> Confirm last maintenance-->#}
{#<!--                    </label>-->#}
{#<!--                </div>-->#}
{##}
{#            </div>#}







            <!-- EXPORT / IMPORT - TAB -->
            <div class="tab-pane" id="tab-pjh-Export-Import">
                <h3>Export</h3>
                <div class="control-group">
                    <div class="controls">
                        <span><b>PrintJobHistory_ExternalDatabase Database</b>: Export all data as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>
                    </div>
                </div>
                <div class="control-group" data-bind="visible: isPrintHistoryPluginAvailable">
                    <div class="controls">
                        <span><b>Legacy: Print History Database</b>: Export all data as <a href="#" data-bind="attr: {href: $root.exportUrl('legacyPrintHistory'), css: {disabled: !$root.exportUrl('legacyPrintHistory')}}">CSV-File</a></span>
                    </div>
                </div>
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <span><b>TODO Metadata.json</b>: OctoPrint use metadata.json files (location: upload-(sub)folders) to store all past print jobs. Export it as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>-->
<!--                    </div>-->
<!--                </div>-->
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <span><b>TODO PrintHistory-Plugin</b>: Export all data from plugin as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>-->
<!--                    </div>-->
<!--                </div>-->
                <h3>Import</h3>

                <div class="control-group">
                    <div class="controls">
                        <div class="row">
                            Import a CSV-File to the PrintJobHistory_ExternalDatabase database.
                        </div>
                        <br/>
                        <div class="row">
                            <div class="span6">
                                <label class="radio">
                                    <input type="radio" name="importCSVMode" value="replace" data-bind="checked: pluginSettings.importCSVMode"> Replace current database
                                </label>
                                <label class="radio">
                                        <input type="radio" name="importCSVMode" value="append" data-bind="checked: pluginSettings.importCSVMode"> Append to database
                                </label>
                            </div>

                            <div class="span6">
                                <div class="input-prepend">
                                    <span class="btn fileinput-button">
                                        <span>Browse...</span>
                                        <input id="settings-pjh-importcsv-upload"
                                               type="file"
                                               name="file"
                                               data-url="/plugin/PrintJobHistory/importCSV"
                                               accept=".csv">
                                    </span>
                                    <span class="add-on" data-bind="text: csvFileUploadName"></span>
                                </div>
                                <button class="btn btn-primary"
                                        data-bind="disable: (csvImportInProgress() || csvFileUploadName() == undefined), click: performCSVImportFromUpload">
                                    <i class="fa fa-spinner fa-spin"
                                       data-bind="visible: csvImportInProgress"></i> Upload & import
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    <div class="controls">
                        <div>
                            The CSV data will be added or totaly replaced to the current database. If you use FilamentManager-Plugin, these values were not touched.
                        </div>
                        <div>
                            HINT: Before importing a backup file of the database will be automatically created. See Storage-Tab for more details.<!-- <a href="#tab-pjh-Storage" data-toggle="tab">storage folder</a>. -->
                        </div>
                        <br>
                        <div>
                            Format:
                            <ul>
                                <li>CSV-Delimiter is a comma</li>
                                <li>You need a header row and value rows</li>
                                <li>The order of the columns doesn't matter</li>
                                <li>Use allowed header names for importing values (see below). Other column names will be skipped</li>
                            </ul>
                            Mandatory column names:
                            <ul>
                                <li><code>Print result [success canceled failed]</code></li>
                                <li><code>File Name</code></li>
                                <li><code>Start Datetime [dd.mm.yyyy hh:mm]</code></li>
                                <li><code>Duration</code></li>
                            </ul>
                            <br>
                            Other column names:
                            <ul>
                                <li><code>User</code></li>
                                <li><code>End Datetime [dd.mm.yyyy hh:mm]</code></li>
                                <li><code>File Path</code></li>
                                <li><code>File Size [bytes]</code></li>
                                <li><code>Note</code></li>
                                <li><code>Spool Name</code></li>
                                <li><code>Material</code></li>
                                <li><code>Diameter [mm]</code></li>
                                <li><code>Density [g/cm3]</code></li>
                                <li><code>Used Length [mm]</code></li>
                                <li><code>Calculated Length [mm]</code></li>
                                <li><code>Used Weight [g]</code></li>
                                <li><code>Used Filament Cost</code></li>
                                <li><code>...</code></li>
                            </ul>
                        </div>
                        <div>
                            Download a <a href="#" data-bind="attr: {href: $root.sampleCSVUrl(), css: {disabled: !$root.sampleCSVUrl()}}">sample csv</a> for a full list of all columns
                        </div>


<!--                        <div class="input-prepend">-->
<!--                            <span class="btn fileinput-button">-->
<!--                                <span>Browse...</span>-->
<!--                                <input id="settings-pjh-importcsv-upload"-->
<!--                                       type="file"-->
<!--                                       name="file"-->
<!--                                       data-url="/plugin/PrintJobHistory/importCSV"-->
<!--                                       accept=".csv">-->
<!--                            </span>-->
<!--                            <span class="add-on" data-bind="text: csvFileUploadName"></span>-->
<!--                        </div>-->
                    </div>
                </div>
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <button class="btn btn-primary"-->
<!--                                data-bind="enable: !csvImportInProgress(), click: performCSVImportFromUpload">-->
<!--                            <i class="fa fa-spinner fa-spin"-->
<!--                               data-bind="visible: csvImportInProgress"></i> Upload & import-->
<!--                        </button>-->
<!--                    </div>-->
<!--                </div>-->


            </div>
            <!-- STORAGE - TAB -->
            <div class="tab-pane" id="tab-pjh-Storage">

<!--                <h4>Instance Name</h4>-->
<!--                <div class="control-group" >-->
<!--                    <label class="control-label" >OctoPrint Name</label>-->
<!--                    <div class="controls">-->
<!--                        <input type="text" class="input-block-level" >-->
<!--                        <span class="help-block">The instance name is used to identified the print jobs in an external database. <br/>-->
<!--                        <div class="alert">If you change this name, you can't read the print jobs from the dabase anymore. You need to manually replace the name in the external database. TODO implement renaming function.</div>-->
<!--                        </span>-->
<!--                    </div>-->
<!--                </div>-->

                <h4>Local SQLite3 Database</h4>

<!--                <div class="controls">-->
<!--                    <label class="radio">-->
<!--                        <input type="radio" name="externalDatabaseGroup" value="false" data-bind="checked: pluginSettings.datbaseSettings.useExternal"> Use local SqLite3 database-->
<!--                    </label>-->
<!--                </div>-->

                <div class="control-group">
                    <label class="control-label">Database file location</label>
                    <div class="controls">
                        <div class="input-append">
                            <input type="text" disabled class="input-xlarge text-right" data-bind="value: databaseFileLocation"/>
                            <a href="#" class="btn btn-danger" title="ReCreate Database" data-bind="click: deleteDatabaseAction"><i class="icon-trash"></i></a>
                            <a href="#" class="btn btn-primary" title="Download Database" data-bind="attr: {href: downloadDatabaseUrl}" target="_blank"><i class="icon-download"></i></a>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Snapshot file location</label>
                    <div class="controls">
                        <input type="text" disabled class="input-xlarge text-right" data-bind="value: snapshotFileLocation"/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Database Backupname</label>
                    <div class="controls">
                        e.g.<code>printJobHistory-backup-V2-20191207-0924.db</code>
                    </div>
                </div>
<!--                <div class="control-group">-->
<!--                    <button class="btn btn-info pull-right" style="margin-right: 80px;">Test connection</button>-->
<!--                </div>-->


<!--
                <h4>External Database</h4>
                <div class="controls">
                    <label class="radio">
                        <input type="radio" name="externalDatabaseGroup" value="true" data-bind="checked: pluginSettings.datbaseSettings.useExternal"> Use external database
                    </label>
                </div>

                <div class="control-group">
                    <label class="control-label">Host</label>
                    <div class="controls">
                        <input type="text" data-bind="value: pluginSettings.datbaseSettings.host"/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Port</label>
                    <div class="controls">
                        <input type="text" data-bind="value: pluginSettings.datbaseSettings.port"/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Database Name</label>
                    <div class="controls">
                        <input type="text" data-bind="value: pluginSettings.datbaseSettings.databaseName"/>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">User</label>
                    <div class="controls">
                        <input type="text" data-bind="value: pluginSettings.datbaseSettings.user"/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Password</label>
                    <div class="controls">
                        <input type="password" data-bind="value: pluginSettings.datbaseSettings.password"/>
                    </div>
                </div>
                <div class="control-group">
                    <span class="controls">
                        <span>Success! Database Schemeversion: 3</span>
                    </span>
                    <button class="btn btn-info pull-right" style="margin-right: 80px;">Test connection</button>
                </div>

                <h4>Plugin V1.7.0 database scheme: #3</h4>
-->

            </div>

            <!-- DEBUGGING - TAB -->
            <div class="tab-pane" id="tab-pjh-Debugging">
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.sqlLoggingEnabled" > SQL Logging enabled
                        </label>
                        <span class="help-inline">Hint: You need to restart your server after you changed the checkbox value.</span>
                    </div>
                </div>
            </div>

        </div>
    </div>

</form>


